buildscript {
  dependencies {
    classpath rootProject.ext.androidPlugin
  }
}

apply plugin: 'com.android.library'

dependencies {
  compile rootProject.ext.rxJava
  compile rootProject.ext.supportAnnotations

  androidTestCompile rootProject.ext.supportTestRunner
  androidTestCompile rootProject.ext.supportTestRules
  androidTestCompile rootProject.ext.rxAndroid
  androidTestCompile rootProject.ext.truth
}

def isCi() {
  return 'true'.equals(System.getenv('CI'))
}

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion

    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  dexOptions {
    preDexLibraries = !isCi()
  }

  lintOptions {
    textReport true
    textOutput 'stdout'
  }

  buildTypes {
    debug {
      testCoverageEnabled true
    }
  }

  packagingOptions {
    exclude 'LICENSE.txt'
  }
}

if (isCi()) {
  println 'Running on CI. Adding task to start emulator.'

  task startEmulator << {
    "$rootDir/gradle/start-emulator.sh".execute().waitFor()
  }

  android.testVariants.all { variant ->
    variant.connectedInstrumentTest.dependsOn startEmulator
  }
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
